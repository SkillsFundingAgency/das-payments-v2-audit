// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace SFA.DAS.Payments.Audit.AcceptanceTests.Data.ReversePoco
{

    // FundingSourceEvent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.2.0")]
    public class FundingSourceEventConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<FundingSourceEvent>
    {
        public FundingSourceEventConfiguration()
            : this("Payments2")
        {
        }

        public FundingSourceEventConfiguration(string schema)
        {
            ToTable("FundingSourceEvent", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EventId).HasColumnName(@"EventId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.RequiredPaymentEventId).HasColumnName(@"RequiredPaymentEventId").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.PriceEpisodeIdentifier).HasColumnName(@"PriceEpisodeIdentifier").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.ContractType).HasColumnName(@"ContractType").HasColumnType("tinyint").IsRequired();
            Property(x => x.TransactionType).HasColumnName(@"TransactionType").HasColumnType("tinyint").IsRequired();
            Property(x => x.FundingSourceType).HasColumnName(@"FundingSourceType").HasColumnType("tinyint").IsRequired();
            Property(x => x.Amount).HasColumnName(@"Amount").HasColumnType("decimal").IsRequired().HasPrecision(15,5);
            Property(x => x.CollectionPeriod).HasColumnName(@"CollectionPeriod").HasColumnType("tinyint").IsRequired();
            Property(x => x.CollectionYear).HasColumnName(@"CollectionYear").HasColumnType("nvarchar").IsRequired().HasMaxLength(4);
            Property(x => x.DeliveryPeriod).HasColumnName(@"DeliveryPeriod").HasColumnType("tinyint").IsRequired();
            Property(x => x.LearnerReferenceNumber).HasColumnName(@"LearnerReferenceNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.LearnerUln).HasColumnName(@"LearnerUln").HasColumnType("bigint").IsRequired();
            Property(x => x.LearningAimReference).HasColumnName(@"LearningAimReference").HasColumnType("nvarchar").IsRequired().HasMaxLength(8);
            Property(x => x.LearningAimProgrammeType).HasColumnName(@"LearningAimProgrammeType").HasColumnType("int").IsRequired();
            Property(x => x.LearningAimStandardCode).HasColumnName(@"LearningAimStandardCode").HasColumnType("int").IsRequired();
            Property(x => x.LearningAimFrameworkCode).HasColumnName(@"LearningAimFrameworkCode").HasColumnType("int").IsRequired();
            Property(x => x.LearningAimPathwayCode).HasColumnName(@"LearningAimPathwayCode").HasColumnType("int").IsRequired();
            Property(x => x.LearningAimFundingLineType).HasColumnName(@"LearningAimFundingLineType").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.AgreementId).HasColumnName(@"AgreementId").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.Ukprn).HasColumnName(@"Ukprn").HasColumnType("bigint").IsRequired();
            Property(x => x.IlrSubmissionDateTime).HasColumnName(@"IlrSubmissionDateTime").HasColumnType("datetime2").IsRequired();
            Property(x => x.JobId).HasColumnName(@"JobId").HasColumnType("bigint").IsRequired();
            Property(x => x.EventTime).HasColumnName(@"EventTime").HasColumnType("datetime2").IsRequired();
            Property(x => x.CreationDate).HasColumnName(@"CreationDate").HasColumnType("datetime2").IsRequired();
        }
    }

}
// </auto-generated>
